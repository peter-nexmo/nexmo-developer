openapi: 3.0.0
servers:
  - url: 'https://api.nexmo.com'
info:
  version: 1.0.0
  title: API Secret Rotation API
  description: >-
    The Nexmo API Secret Rotation API enables you to create one new API Secret in addition to the existing API Secret. Following the successful use of the new API Secret, you are able to revoke the old API Secret.
security:
  - bearerAuth: []
  - basicAuth: []
paths:
  /accounts/{accountId}/secrets:
    get:
      summary: Retrieve API Secrets
      parameters:
        - name: accountId
          in: path
          description: ID of the account
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/schemas/SecretsAll'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      summary: Create API Secret
      parameters:
        - name: accountId
          in: path
          description: ID of the account
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/schemas/NewApiSecret'
      responses:
        '200':
          $ref: '#/components/schemas/SecretInfo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
  /accounts/{accountId}/secrets/{secretId}:
    get:
      summary: Retrieve API Secret
      parameters:
        - name: accountId
          in: path
          description: ID of the account
          required: true
          schema:
            type: string
        - name: secretId
          in: path
          description: ID of the API Secret
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/schemas/SecretInfo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    delete:
      summary: Revoke API Secret
      parameters:
        - name: accountId
          in: path
          description: ID of the account
          required: true
          schema:
            type: string
        - name: secretId
          in: path
          description: ID of the API Secret
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Revoked secret response
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic
  responses:
    UnauthorizedError:
      description: Credential is missing or invalid
      content:
        application/json:
          schema:
            type: object
            required:
              - type
              - title
              - detail
              - instance
            properties:
              type:
                type: 'string'
                example: 'UnauthorizedError'
              title:
                type: 'string'
                example: 'Unauthorized action'
              detail:
                type: string
                example: 'Credential was rejected'
              instance:
                type: string
                example: 'ABC122nf9f0n3290fn'
    ForbiddenError:
      description: Credential cannot be added/deleted
      content:
        application/json:
          schema:
            type: object
            required:
              - type
              - title
              - detail
              - instance
            properties:
              type:
                type: 'string'
                example: 'ForbiddenError'
              title:
                type: 'string'
                example: 'Action is forbidden'
              detail:
                type: string
                example: 'Number of API Secrets should be > 0 and at most 2'
              instance:
                type: string
                example: 'ABC122nf9f0n3190fn'
  schemas:
    SecretsAll:
        description: API secrets response
        content:
          application/json:
            schema:
              type: object
              properties:
                _links:
                  example:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/LinkSecrets'
                _embedded:
                  type: array
                  items:
                    allOf:
                      - $ref: '#/components/schemas/SecretInfo'
    SecretInfo:
      description: API secret response
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                example: "bfb562bb-bbbb-cccc-dddd-0ed7f85819d4"
                type: string
                description: >-
                  Unique identifier of the credential
              created_at:
                type: string
                example: "2020-01-01T12:00:00.000Z"
                description: The time credential was created
              _links:
                type: object
                allOf:
                  - $ref: '#/components/schemas/LinkSecret'
                example:
    NewApiSecret:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - secret
            properties:
              secret:
                description: |
                    The new secret must follow these rules:

                    * minimum 8 characters
                    * maximum 25 characters
                    * minimum 1 lower case character
                    * minimum 1 upper case character
                    * minimum 1 digit

                type: string
                example: 'example-4PI-secret'
    LinkSecret:
      properties:
        self:
          type: object
          allOf:
            - $ref: '#/components/schemas/SelfSecret'
    LinkSecrets:
      properties:
        self:
          type: object
          allOf:
            - $ref: '#/components/schemas/SelfSecrets'
    SelfSecret:
      properties:
        href:
          example: "http://api.nexmo.com/accounts/acc6111f/secrets/bfb562bb-bbbb-cccc-dddd-0ed7f85819d4"
          type: string
    SelfSecrets:
      properties:
        href:
          example: "http://api.nexmo.com/accounts/acc6111f/secrets"
          type: string

x-errors:
  validation:
    description: The provided payload is invalid
    resolution: Modify your request to provide a valid payload
    link:
      text: View API reference
      url: /api/account/api-secret-management#transaction

  delete-last-secret:
    description: You can not delete your last API secret
    resolution: Add another API secret before deleting this one
