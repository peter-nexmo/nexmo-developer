<div class="Vlt-grid">
  <div class="Vlt-col Vlt-col--2of3 Nxd-api__docs">
    <div>
      <%= content_tag :h3, endpoint.summary, id: endpoint.operationId %>
      <% if endpoint.description %>
        <%= content_tag :p, endpoint.description.render_markdown %>
      <% end %>

      <div class="Vlt-badge-combined">
        <code class="Vlt-badge Vlt-badge--large Nxd-method-badge Nxd-method-badge--<%= endpoint.method %>"><%= endpoint.method.upcase %></code>
        <code class="Vlt-badge Vlt-badge--large Vlt-badge--grey">
          <%
              servers = endpoint.path.servers ? endpoint.path.servers : endpoint.definition.servers
          %>
          <span><%= servers[0]['url'] %></span><%= endpoint.path.path.gsub(/\{(.+?)\}/, '<span class="api-path-parameter">:\1</span>').html_safe %>
        </code>
      </div>

       <% if endpoint.jwt? || endpoint.basic_auth? || endpoint.oauth? %>
        <h4>Authentication</h4>

        <% if endpoint.jwt? && endpoint.basic_auth? %>
            <p>This API supports both JWT and Basic authentication. Basic authentication is easier to get started with, but does not support advanced features such as ACLs.</p>

            <p>You can use <em>either</em> JWT or Basic authentication, but not both at the same time.</p>
        <% end %>

        <div class="Vlt-table Vlt-table--data Vlt-table--bordered">
          <table>
            <thead>
              <tr>
                <th>Key</th>
                <th>Description</th>
                <th>Example</th>
                <th>Default</th>
              </tr>
            </thead>
            <tbody>
            <% if endpoint.oauth? %>
              <tr>
                <td>
                  <b>Authorization</b>
                </td>
                <td>
                    <b>Your OAuth token.</b><br>
                    <small><%= link_to "Read more about OAuth tokens", "/vonage-business-cloud/vbc-apis/getting-started/authentication" %></small>
                </td>
                <td><code>Bearer &lt;access_token&gt;</code></td>
                <td>
                    <em>None</em>
                </td>
              </tr>
              <% end %>

              <% if endpoint.jwt? %>
              <tr>
                <td>
                  <b>Authorization</b>
                </td>
                <td>
                    <b>Your JSON web token.</b><br>
                    <small><%= link_to "Read more about JWTs", "/concepts/guides/authentication#json-web-tokens-jwt" %></small>
                </td>
                <td><code>Bearer &lt;JWT&gt;</code></td>
                <td>
                    <em>None</em>
                </td>
              </tr>
              <% end %>

              <% if endpoint.basic_auth? %>
              <tr>
                <td>
                  <b>Authorization</b>
                </td>
                <td>
                  <b>Base64 encoded API key and secret joined by a colon.</b><br>
                  <small><%= link_to "Read more", "/concepts/guides/authentication#header-based-api-key-and-secret-authentication" %></small>
                </td>
                <td><code>Basic &lt;base64&gt;</code></td>
                <td>
                  <i>None</i>
                </td>
              </tr>
              <% end %>
            </tbody>
          </table>
        </div>
      <% end %>

      <%= render 'parameter_groups', endpoint: endpoint %>
      <%= render 'response_descriptions', endpoint: endpoint, anchor_prefix: "response-#{endpoint.operationId}", auto_expand_responses: @auto_expand_responses %>

    </div>
  </div>

  <div class="Vlt-col Vlt-col--1of3 Nxd-api__code">
      <%= render 'code_examples', endpoint: endpoint %>

      <% endpoint.responses.each do |response| %>
        <% id = SecureRandom.hex %>
        <%
          expand_response = response.code[0] == '2' && response.raw['x-expand-response'] != false
          expand_response = true if response.raw['x-expand-response']
        %>

      <div class="Vlt-accordion">
        <button tabindex="0" class="Vlt-accordion__trigger <%= expand_response ? 'Vlt-accordion__trigger_active' : '' %>">
          <h5 class="Vlt-title--nomargin">HTTP response
            <span class="Vlt-badge Vlt-badge--<%= response.code[0] == '2' ? 'green' : response.code[0] == '3' ? 'yellow' : 'red'  %>"><%= response.code %></span>
          </h5>
        </button>

        <div class="Vlt-accordion__content <%= expand_response ? 'Vlt-accordion__content_open' : '' %>">
          <div class="tabs-content" data-tabs-content="<%= id %>">
            <% response.formats.each_with_index do |format, index| %>

                <div class="js-format" data-format="<%= format %>">
                  <% if response.exhibits_one_of_multiple_schemas?(format) %>
                    <%
                      schema_tab_ids = []
                      id = SecureRandom.hex
                      response.split_schemas(format).each { schema_tab_ids << SecureRandom.hex }
                    %>

                    <div class="Vlt-tabs">
                      <div class="Vlt-tabs__header">
                        <% response.split_schemas(format).each_with_index do |schema, index| %>
                          <div tabindex="0" <%= schema_tab_ids[index] %>" <% if index.zero? %>class="Vlt-tabs__link Vlt-tabs__link_active" aria-selected="true"<% else %>class="Vlt-tabs__link"<% end %>><%= schema['description'] || "Response #{index + 1}" %></div>
                        <% end %>
                      </div>
                      <div class="Vlt-tabs__content">
                      <% response.split_schemas(format).each_with_index do |schema, index| %>
                         <div class="Vlt-tabs__panel <% if index.zero? %>Vlt-tabs__panel_active<% end %>">
                           <%= ResponseParserDecorator.new(schema).html(format, xml_options: schema['xml']) %>
                        </div>
                        <% end %>
                      </div>
                    </div>
                  <% else %>
                    <% schema = response.schema(format) %>
                    <%= ResponseParserDecorator.new(schema).html(format, xml_options: schema['xml']) %>
                  <% end %>
                </div>


            <% end %>
          </div>
        </div>

          <% if response.code == '204' || response.formats.empty? %>
            <pre class="highlight"><code>No content</code></pre>
          <% end %>

        </div>
      <% end %>
    </div>
</div>

<% endpoint.callbacks.each do |callback| %>
  <%= render 'callback', callback: callback %>
<% end %>
