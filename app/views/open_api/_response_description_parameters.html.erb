<%
  # @mheap: This is hacky handling for allOf, but it works for now
  allOf = schema['allOf']
  if allOf
    schema = allOf.reduce { |a,b| a.deep_merge(b) }
  end
%>

<% if schema['properties'] %>
<% schema['properties'].each do |key, value| %>
  <% next if key == '_links' %>
  <% next if value['x-skip-response-description'] %>
  <% anchor_value = "#{anchor_prefix}-#{key}" %>
  <tr<% if value['properties'] %> class=" Vlt-table__row--noline" <% end %>>
      <td id="<%= anchor_value %>">
          <b><%= key %></b>
          <% if value['items'] %>
              <br />
              <small>array of <%= value['items']['type'] %>s</small>
          <% end %>
      </td>
    <td>
    <%= value['description'] ? value['description'].render_markdown : '' %>
      <% if value['enum']%>
       <small class="Vlt-grey-dark">
          One of: <%= parameter_values(value['enum']) %>
        </small>
      <% end %>

      <% if value['items'] # If this is an array, we need to show the structure of the children %>
          <% value['properties'] = value['items']['properties'] %>
      <% end %>
      <% if value['properties'] %>
        </td></tr>
        <tr class="Vlt-table__row--nohighlight">
        <td colspan="2">
        <div class="Vlt-table Vlt-table--data Vlt-table--bordered">
        <table>
          <thead>
          <tr>
            <th>Field</th>
            <th>Description</th>
          </tr>
          </thead>
          <tbody>
          <%= render 'response_description_parameters', schema: value, anchor_prefix: anchor_value %>
          </tbody>
        </table>
        </div>
      <% end %>
    </td>
  </tr>
<% end %>
<% end %>
